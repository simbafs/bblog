---
import type { CollectionEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import type { MarkdownHeading } from "astro";

type Blog = CollectionEntry<"blog">["data"];

interface Props extends Blog {
  headings: MarkdownHeading[];
}

const {
  title,
  description,
  publishDate,
  updatedDate,
  heroImage,
  tags,
  headings,
} = Astro.props;

const links = headings.map((heading) => {
  return {
    text: "#".repeat(heading.depth) + " " + heading.text,
    href: `#${heading.slug}`,
  };
});
---

<Layout
  title={title}
  description={description}
  links={links}
  cmd="grep {} -e '#'"
>
  <article>
    <div class="p-4">
      {
        heroImage && (
          <img
            width={1020}
            height={510}
            src={heroImage}
            alt=""
            class="shadow-terminal-secondary block rounded-2xl shadow-xl"
          />
        )
      }
    </div>
    <div
      class="prose dark:prose-invert md:prose-lg mx-auto my-0 w-[720px] max-w-[calc(100%-2em)] p-4"
    >
      <div class="mt-8 mb-4 py-4 text-center">
        <h1>{title}</h1>
        <div class="date">
          <FormattedDate date={publishDate} />
          {
            updatedDate && (
              <div class="italic">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        {
          tags && (
            <div class="flex flex-wrap justify-center gap-2">
              {tags.map((tag) => (
                <span class="italic">#{tag}</span>
                // TODO: add link to tag page
              ))}
            </div>
          )
        }
        <hr class="border-terminal-secondary" />
      </div>
      <slot />
    </div>
  </article>
</Layout>
